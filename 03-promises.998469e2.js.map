{"mappings":"YAAA,IAAMA,EAAO,CACXC,QAASC,SAASC,cAAc,yBAChCC,OAAQF,SAASC,cAAc,wBAC/BE,SAAUH,SAASC,cAAc,0BACjCG,aAAcJ,SAASC,cAAc,WAGvC,SAASI,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACWC,KAAKC,SAAW,GAGpCJ,EAAQ,oBAAmCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QAGjDG,EAAO,oBAAmCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,O,GAGjDA,E,IA0BPT,EAAKM,aAAaW,iBAAiB,SAtBnC,SAAuBC,GACrBA,EAAMC,iBAMN,IALA,IAAIC,EAAWC,SAASrB,EAAKK,SAASiB,OAClCb,EAAQY,SAASrB,EAAKC,QAAQqB,OAC9BC,EAAOF,SAASrB,EAAKI,OAAOkB,OAGvBE,EAAQ,EAAGA,GAASJ,EAAUI,GAAS,EAAG,CAC5BjB,EAAciB,EAAOf,GAEzCgB,MAAK,SAAAH,GACJI,QAAQC,IAAIL,E,IACXM,OAAM,SAAAC,GACLH,QAAQC,IAAIE,E,IAEbpB,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delayEl: document.querySelector('input[name = \"delay\"]'),\n  stepEl: document.querySelector('input[name = \"step\"]'),\n  amountEl: document.querySelector('input[name = \"amount\"]'),\n  submitButton: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  \n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`Resolved promise ${position} in ${delay} ms`);\n        \n      } else {\n        reject(`Rejected promise ${position} in ${delay} ms`);\n        \n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  let attempts = parseInt(refs.amountEl.value);\n  let delay = parseInt(refs.delayEl.value);\n  let step = parseInt(refs.stepEl.value);\n\n  \n  for (let index = 1; index <= attempts; index += 1) {\n    let currentPromise = createPromise(index, delay)\n    currentPromise\n    .then(value => {\n      console.log(value)})\n      .catch(error => {\n        console.log(error);\n      }); \n       delay += step;\n    };\n  \n    \n  }\n\n\nrefs.submitButton.addEventListener('click', onSubmitClick);\n"],"names":["$ce04d3a99e08e73b$var$refs","delayEl","document","querySelector","stepEl","amountEl","submitButton","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","event","preventDefault","attempts","parseInt","value","step","index","then","console","log","catch","error"],"version":3,"file":"03-promises.998469e2.js.map"}