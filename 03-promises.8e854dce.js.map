{"mappings":"AAAA,MAAMA,EAAO,CACXC,QAASC,SAASC,cAAc,yBAChCC,OAAQF,SAASC,cAAc,wBAC/BE,SAAUH,SAASC,cAAc,0BACjCG,aAAcJ,SAASC,cAAc,WAGvC,SAASI,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACWC,KAAKC,SAAW,GAGpCJ,EAAQ,oBAAoBH,QAAeC,QAG3CG,EAAO,oBAAoBJ,QAAeC,OAAW,GAGtDA,EAAM,G,CA0BbT,EAAKM,aAAaU,iBAAiB,SAtBnC,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAWC,SAASpB,EAAKK,SAASgB,OAClCZ,EAAQW,SAASpB,EAAKC,QAAQoB,OAC9BC,EAAOF,SAASpB,EAAKI,OAAOiB,OAGhC,IAAK,IAAIE,EAAQ,EAAGA,GAASJ,EAAUI,GAAS,EAAG,CAC5BhB,EAAcgB,EAAOd,GAEzCe,MAAKH,IACJI,QAAQC,IAAIL,EAAM,IACjBM,OAAMC,IACLH,QAAQC,IAAIE,EAAM,IAEnBnB,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delayEl: document.querySelector('input[name = \"delay\"]'),\n  stepEl: document.querySelector('input[name = \"step\"]'),\n  amountEl: document.querySelector('input[name = \"amount\"]'),\n  submitButton: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  \n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`Resolved promise ${position} in ${delay} ms`);\n        \n      } else {\n        reject(`Rejected promise ${position} in ${delay} ms`);\n        \n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  let attempts = parseInt(refs.amountEl.value);\n  let delay = parseInt(refs.delayEl.value);\n  let step = parseInt(refs.stepEl.value);\n\n  \n  for (let index = 1; index <= attempts; index += 1) {\n    let currentPromise = createPromise(index, delay)\n    currentPromise\n    .then(value => {\n      console.log(value)})\n      .catch(error => {\n        console.log(error);\n      }); \n       delay += step;\n    };\n  \n    \n  }\n\n\nrefs.submitButton.addEventListener('click', onSubmitClick);\n"],"names":["$47d4ff9957288465$var$refs","delayEl","document","querySelector","stepEl","amountEl","submitButton","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","attempts","parseInt","value","step","index","then","console","log","catch","error"],"version":3,"file":"03-promises.8e854dce.js.map"}